{{#section 'css'}}
<style>
    .lds-spinner {
        color: official;
        display: inline-block;
        position: relative;
        width: 256px;
        height: 256px;
    }

    .lds-spinner div {
        transform-origin: 128px 128px;
        animation: lds-spinner 1.2s linear infinite;
    }

    .lds-spinner div:after {
        content: " ";
        display: block;
        position: absolute;
        top: 12px;
        left: 116px;
        width: 20px;
        height: 56px;
        border-radius: 20%;
        background: black;
    }

    .lds-spinner div:nth-child(1) {
        transform: rotate(0deg);
        animation-delay: -1.1s;
    }

    .lds-spinner div:nth-child(2) {
        transform: rotate(30deg);
        animation-delay: -1s;
    }

    .lds-spinner div:nth-child(3) {
        transform: rotate(60deg);
        animation-delay: -0.9s;
    }

    .lds-spinner div:nth-child(4) {
        transform: rotate(90deg);
        animation-delay: -0.8s;
    }

    .lds-spinner div:nth-child(5) {
        transform: rotate(120deg);
        animation-delay: -0.7s;
    }

    .lds-spinner div:nth-child(6) {
        transform: rotate(150deg);
        animation-delay: -0.6s;
    }

    .lds-spinner div:nth-child(7) {
        transform: rotate(180deg);
        animation-delay: -0.5s;
    }

    .lds-spinner div:nth-child(8) {
        transform: rotate(210deg);
        animation-delay: -0.4s;
    }

    .lds-spinner div:nth-child(9) {
        transform: rotate(240deg);
        animation-delay: -0.3s;
    }

    .lds-spinner div:nth-child(10) {
        transform: rotate(270deg);
        animation-delay: -0.2s;
    }

    .lds-spinner div:nth-child(11) {
        transform: rotate(300deg);
        animation-delay: -0.1s;
    }

    .lds-spinner div:nth-child(12) {
        transform: rotate(330deg);
        animation-delay: 0s;
    }

    @keyframes lds-spinner {
        0% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }

    .loading-text {
        text-align: center;
        position: relative;
        text-transform: uppercase;
        font-size: 2em;
        letter-spacing: 4px;
        overflow: hidden;
        background: linear-gradient(90deg, #000, #fff, #000);
        background-repeat: no-repeat;
        background-size: 80%;
        animation: loading 3s linear infinite;
        -webkit-background-clip: text;
        -webkit-text-fill-color: rgba(255, 255, 255, 0);
    }

    @keyframes loading {
        0% {
            background-position: -500%;
        }

        100% {
            background-position: 500%;
        }
    }
</style>
{{/section}}
{{#section 'js'}}
<script>
    let socket = io();
    let info =
    {
        nickname: '{{info.nickname}}',
        pin: '{{info.pin}}'
    };

    socket.on('roomNotExists', () => {
        $('#checking-room').html('Room Not Found');
        setTimeout(() => {
            window.location.href = '/player';
        }, 3000);
    });

    socket.on('roomFound', () => {
        $('#checking-room').html('Waiting for host to start game!!');
    });

    socket.on('alreadyStart',()=>{
        $('#checking-room').html('Game already started!');
        setTimeout(() => {
            window.location.href = '/player';
        }, 3000);
    })


    socket.on("playerInfo", (player) => {
        sessionStorage.setItem(`profile`, JSON.stringify(player));
    })

    socket.on('updatePlayerList', (players) => {
        $("#players-number").html(players.length);
        $('#playerList').html('');
        for (let i = 0; i < players.length; i++) {
            $('#playerList').append($("<div class='col-md-4 py-2'><p>" + players[i].name + "</p></div>"));
        }
    });
    socket.on("redirect-to-question", () => {
        window.location.replace('/player/new_game');
    })

    socket.on('disconnect', function () {
        console.log('disconnected from server.');
    })

    socket.on('roomCanceled', () => {
        window.location.replace('/player');
    })

    socket.on('connect', () => {
        socket.emit('player-join', info);
    })

    sessionStorage.setItem("localPin", info.pin);

</script>
{{/section}}
<div class="d-flex flex-column justify-content-center align-items-center my-5">
    <div class="lds-spinner">
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
    </div>
    <br>
    <h1 id="checking-room" class="loading-text"></h1>
</div>